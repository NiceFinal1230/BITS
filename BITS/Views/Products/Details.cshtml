@using static BITS.Services.EnumServices
@model BITS.Models.Product

@{
    ViewData["Title"] = "Details";
}
<style>
    .carousel-item{
        height: 500px;
    }
    #carouselExampleIndicators {
        height: 500px;
    }

    .carousel-item img {
        height: 100%;
        position: absolute;
        left: 50%;
        transform: translate(-50%,0);
    }

    #checkout-thumbnail {
        height: 270px;
    }

    #checkout-thumbnail img{
        height: 100%;
        width: 100%;
        object-fit: cover;
        object-position: center;
    }

    .buy-now,
    .add-to-cart{
        box-sizing: border-box;
        display: block;
        width: calc(100%);
        border-radius: 7px;
        border: none;
        padding: 10px;
        color: white;
        text-align: center;
    }

    .buy-now:hover,
    .add-to-cart:hover {
        text-decoration: unset;
        font-weight:unset;
        color: inherit;
    }

    .buy-now{
        background-color: #1277D9;
    }

    .add-to-cart {
        margin-top:12px;
        border: 1px solid white;
    }

    .right-details{
        margin-top: 12px;
    }

    .right-index{
        margin-top: 5px;
        color: #F5F5F5;
        font-weight: bold;
        opacity: 60%;
    }

    .right-value {
        font-weight: bold;
        color: white;
    }

    .product {
        margin-top: 24px;
    }

    .product-type{
        padding: 3px 12px;
        border-radius: 6px;
        background-color: #3E3E3E;
    }

    .product-sale{
        margin-top: 18px;
    }

    .share-report{
        display: flex;
        justify-content: space-evenly;
        box-sizing: border-box;

    }

    .share {
        display: flex;
        justify-content: space-evenly;
        width: 40%;
        text-align: center;
        border: 1px solid #4BC140;
        border-radius: 4px;
        padding: 3px 6px;
    }

    .report {
        display: flex;
        justify-content: space-evenly;
        width: 40%;
        text-align: center;
        border: 1px solid #E03030;
        border-radius: 4px;
        padding: 3px 6px;
    }

    .product-subtitle{
        font-weight: bold;
    }

    .product-description,
    .product-requirement,
    #product-content {
        margin-top: 24px;
    }

    .product-requirement{
        padding: 1em;
        font-weight: bold;
        font-size: 0.75em;
    }

    .product-requirement div{
        background-color: #202020;
    }

    #product-requirement-row-container{
        padding: 1em;
    }

    #product-requirement-row-container .index{
        color: #f5f5f5;
        opacity: 60%;
        margin-top: 0.5em;
    }

    .product-rate{
        padding: 3px 12px;
        border-radius: 6px;
        background-color: #1277D9;
    }
    #main{
        margin-top: 1em;
    }
</style>
<div class="container" id="main">

    <div class="row  align-items-center">
        <div class="col-lg-8"> <h1>@Html.DisplayFor(model => model.Name)</h1> </div>
        <div class="col-lg-4 share-report">
            <a asp-action="Details" asp-route-id="@Model.ProductId" class="share">
                <i class="bi bi-share-fill"></i>
                <span>Share</span>
            </a>
            <a asp-action="Details" asp-route-id="@Model.ProductId" class="report">
                <i class="bi bi-flag"></i>
                <span>Report</span>
            </a>
        </div>
    </div>
    <div class="row  align-items-center">
        <div class="col-lg-auto">
            <h5><u>Overview</u></h5>
        </div>
        <div class="col-lg-auto">
            <h5 style="color: #ADADAD"><a asp-action="AddOn" asp-route-id="@Model?.ProductId">Add-On</a></h5>
        </div>
    </div>
    <div class="row" id="product-content">
        <div class="col-lg-8">
            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    @{
                        int indicatorCount = 0;
                        foreach(var item in Model.PreviewImages)
                        {
                            if(item != "")
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@indicatorCount" class="@(indicatorCount == 0 ? "active" : "")"></li>
                            }
                        indicatorCount++;
                    }
                }
                </ol>
                <div class="carousel-inner">
                    @{
                        int imageCount = 0;
                        foreach (var imageItem in Model.PreviewImages)
                        {
                            if (@imageItem != "")
                            {
                                <div class="carousel-item @(imageCount == 0 ? "active" : "")">
                                    <img class="img-fluid" src="@imageItem" alt="@imageCount">
                                </div>
                            }
                        imageCount++;
                    }
                }
                </div>

                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
            </div>
            <p class="product-description">@Html.DisplayFor(model => model.Description)</p>

            <div class="container">
                <div class="row">
                    <div class="col-sm product-subtitle">@Html.DisplayNameFor(model => model.Genres)</div>
                    <div class="col-sm product-subtitle">@Html.DisplayNameFor(model => model.Features)</div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        @{
                            int genresCount = 0;
                            foreach(var i in Model.Genres)
                            {
                                genresCount++;
                                @(genresCount == Model.Genres.Count ? @i.ToString() : @i.ToString() + ", ")
                            }
                        }
                    </div>
                    <div class="col-sm">
                        @{
                            int featuresCount = 0;
                            foreach (var i in Model.Features)
                            {
                                featuresCount++;
                                @(featuresCount == Model.Features.Count ? @i.ToString() : @i.ToString() + ", ")
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="product-requirement">
                <p>System Requirements</p>
                <div class="container">
                    <div class="row" id="product-requirement-row-container">
                        <div class="col-sm">
                            <div class="index">Minimum</div>
                            <div class="index">Operating System</div>
                            <div class="value">@Html.DisplayFor(model => model.OSMinimum)</div>
                            <div class="index">Processor</div>
                            <div class="value">@Html.DisplayFor(model => model.ProcessorMinimum)</div>
                            <div class="index">Memory</div>
                            <div class="value">@Html.DisplayFor(model => model.MemoryMinimum)</div>
                            <div class="index">Storage</div>
                            <div class="value">@Html.DisplayFor(model => model.StorageMinimum)</div>
                            <div class="index">Graphics</div>
                            <div class="value">@Html.DisplayFor(model => model.GraphicsMinimum)</div>
                        </div>
                        <div class="col">
                            <div class="index">Recommended</div>
                            <div class="index">Operating System</div>
                            <div class="value">@Html.DisplayFor(model => model.OSRecommended)</div>
                            <div class="index">Processor</div>
                            <div class="value">@Html.DisplayFor(model => model.ProcessorRecommended)</div>
                            <div class="index">Memory</div>
                            <div class="value">@Html.DisplayFor(model => model.MemoryRecommended)</div>
                            <div class="index">Storage</div>
                            <div class="value">@Html.DisplayFor(model => model.StorageRecommended)</div>
                            <div class="index">Graphics</div>
                            <div class="value">@Html.DisplayFor(model => model.GraphicsRecommended)</div>
                        </div>
                    </div>
                    
                </div>
            </div>
            
        </div>

        <div class="col-lg-4">
            <div class="right">
                <div id="checkout-thumbnail">
                    <img src="@(@Model.PreviewImages.Count != 0 ? Model.PreviewImages.First() : "")" id="checkout-thumbnail-image" />
                </div>
                @{
                    if (@ViewBag.DiscountRate != null && @ViewBag.DiscountRate != 0)
                    {
                        <div class="d-flex justify-content-between align-items-center product">
                            <div class="product-type">@Html.DisplayFor(model => model.ProductType)</div>
                            <div class="product-rate">-@ViewBag.DiscountRate%</div>
                            <div class="product-price"><s>$@Html.DisplayFor(model => model.Price)</s></div>
                            <div class="product-price">$@ViewBag.DiscountPrice</div>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-between align-items-center product">
                            <div class="product-type">@Html.DisplayFor(model => model.ProductType)</div>
                            <div class="product-price">$@Html.DisplayFor(model => model.Price)</div>
                        </div>
                    }
                }

                <p class="product-sale">@(@ViewBag.EndDate != null ? "Sale ends at " + @ViewBag.EndDate : "No sale available")</p>

                <button type="button" class="buy-now">Buy Now</button>
                <a class="add-to-cart" asp-controller="Carts" asp-action="Create" asp-route-id="@Model?.ProductId">Add to Cart</a>
                
                <div class="right-details">
                    <div class="d-flex justify-content-between">
                        <div class="right-index">Refund Type</div>
                        <div class="right-value">@Html.DisplayFor(model => model.RefundType)</div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="right-index">@Html.DisplayNameFor(model => model.Developer)</div>
                        <div class="right-value">@Html.DisplayFor(model => model.Developer)</div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="right-index">@Html.DisplayNameFor(model => model.Publisher)</div>
                        <div class="right-value">@Html.DisplayFor(model => model.Publisher)</div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="right-index">@Html.DisplayNameFor(model => model.ReleaseDate)</div>
                        <div class="right-value">@Html.DisplayFor(model => model.ReleaseDate)</div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
