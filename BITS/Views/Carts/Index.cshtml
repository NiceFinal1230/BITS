@model BITS.ViewModel.CartViewModel

@{
    ViewData["Title"] = "My Cart";
}
<style>
    .col-auto{
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .img-container{
        width: 200px;
        height: 170px;
    }

    .img-container img{
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: 10px;
    }

    .cart-product{
        margin-top: 1em;
        margin-bottom: 2em;
        padding: 1em;
        background-color: #323232;
        border-radius: 10px;
        z-index: 1;
    }

    .cart-product-type{
        padding: 3px 12px;
        border-radius: 6px;
        background-color: #5E5E5E;
        font-weight: bold;
        display: inline-block;
    }

    .cart-product-name{
        font-size: 1.5em;
        font-weight: bold;
    }

    .cart-product-refund-type{
        font-size: 1em;
    }

    .cart-product-rate{
        padding: 3px 12px;
        border-radius: 6px;
        background-color: #1277D9;
        margin-right: 1em;
        font-weight: bold;
    }

    .delete-button{
        padding: 5px;
    }

    .summary{
        font-size: 2.25em;
        font-weight: bold;
    }

    .right-index {
        font-size: 1.5em;
        opacity: 60%;
        font-weight: bold;
    }
    .right{
        padding: 0px 3em;
    }
    .right-value{
        font-size: 1.5em;
        font-weight: bold;
    }

    .checkout-button{
        box-sizing: border-box;
        display: block;
        width: calc(100%);
        border-radius: 7px;
        border: none;
        padding: 10px;
        color: white;
        text-align: center;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 2em;
        background-color: #1277D9;
    }

    #footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100vw;
        height: 2.5vh;
        font-size: 1.5vmin;
    }

</style>

<div class="container">

    <h1 style="margin-top: 1em;">My Cart</h1>

    <div class="row">
        <div class="col-lg-8">
        @{
            foreach (var item in Model.ProductStocktake)
            {
                <div class="row cart-product" style="background-color: @(Model.RunOut.Contains(item.Product.ProductId) ? "#B33636" : "")">
                    <div class="col-auto">
                        <div class="img-container">
                                <img src="@(item.Product.PreviewImages.Count > 0 ? item.Product.PreviewImages.First() : "")" />
                        </div>
                    </div>
                    <div class="col">
                        <div class="row justify-content-between align-items-center">
                            <div class="cart-product-type">@item.Product.ProductType</div>
                            <a class="delete-button" asp-action="Delete" asp-route-id="@item.Product.ProductId">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                    <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                                </svg>
                            </a>
                        </div>

                        <div class="row cart-product-name">@item.Product.Name</div>
                        <div class="row cart-product-refund-type">@item.Product.RefundType</div>

                        @if (@item.Stocktake.DiscountRate != 0)
                        {
                            var temp = (@item.Product.Price * (100 - item.Stocktake.DiscountRate) / 100);
                            var price = temp.ToString("F2");
                            <div class="row justify-content-end cart-product-actual-price"><span style="color: #ADADAD; text-decoration: line-through;">$ @item.Product.Price.ToString("F2")</span></div>
                            <div class="row justify-content-between align-items-center">
                                <div>x @item.Quantity</div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="cart-product-rate">-@item.Stocktake.DiscountRate%</div>
                                    <div class="cart-product-price">SGD @price</div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row justify-content-between align-items-stretch cart-product-actual-price">
                                <div>x @item.Quantity</div>
                                <div>$ @item.Product.Price</div>
                            </div>
                        }
                    </div>
                </div>

            }
        }
        </div>

        <div class="col-lg-4">
            <div class="right">
                <h1 class="summary">Summary</h1>
                <div class="right-details">
                    <div class="d-flex justify-content-between">
                        <div class="right-index">Prices</div>
                        <div class="right-value">SGD @Model.Prices.ToString("F2")</div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="right-index">Discount</div>
                        <div class="right-value">-SGD @Model.Discount.ToString("F2")</div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="right-index">Subtotal</div>
                        <div class="right-value">SGD @Model.Subtotal.ToString("F2")</div>
                    </div>
@*                     <form asp-controller="Orders" asp-action="Index" method="post">
                        @{
                            var jsonModel = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
                        }
                        <input type="hidden" name="products" value="@jsonModel" />
                        <input class="checkout-button" type="submit" value="Checkout" id="save-button" />
                    </form> *@
                    <form asp-action="Checkout" method="post">
                        @{
                            var jsonModel = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
                        }
                        <input type="hidden" name="products" value="@jsonModel" />
                        <input class="checkout-button" type="submit" value="Checkout" id="save-button" />
                    </form>

                </div>

            </div>
        </div>

    </div>
</div>
